#include <iostream>
using namespace std;

class Stack {
    struct node {
        int data;
        node* next;
    };
    node *top, *cur;

public:
    Stack():top(NULL) {};

    void push(int newData) {
        node *newNode = new node;
        if(newNode == NULL) {
            cout << "Allocation failed" << endl;
        } else {
        newNode->data = newData;
        newNode->next = top;
        top = newNode;
        }
    
    }

    bool isEmpty() {
        return top == NULL;
    }
    void pop() {
        if(isEmpty()) {
            cout << "Stack is empty" << endl;
        } else {
            node *temp = top;
            top = top->next;
            temp = temp->next = NULL;
            delete temp;
        }
    }
    void peek(int &stackTop) {
        if(isEmpty()) {
            cout << "Stack is empty" << endl;
        } else {
            cout << "Top element: ";
            stackTop = top->data;
        }
    }
    void display() {
        cur = top;
        cout << "Stack: [";
        while(cur != nullptr) {
            cout << cur->data << " ";
            cur = cur->next;
        }
        cout << "]" << endl;
    }
};
int main() {
    
    Stack s;
    
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);


    s.display();

    s.pop();

    int x;
    s.peek(x);
    cout << x << endl;    

    s.push(50);
    s.display();

    s.peek(x);
    cout << x << endl;

    return 0;
}